function Base.show(io::IO, ::MIME"text/plain", candidates::TightBindingCandidates)
    summary(io, candidates)
    println(io, ":")
    for is in 1:length(candidates.idxs·¥∏s)
        n·¥∏s = [candidates.brs[j] for j in candidates.idxs·¥∏s[is]]
        print(io, " n·¥∏ = ")

        join(io, n·¥∏s, " + ")
        println(io)

        n·µÄ‚Å∫·¥∏ss = [[candidates.brs[m] for k in js for m in k] for js in candidates.idxs·µÄ‚Å∫·¥∏ss[is]]
        for js in eachindex(n·µÄ‚Å∫·¥∏ss)
            printstyled(io, "   ‚ÅΩ", Crystalline.supscriptify(string(js)), "‚Åæ ";
                color=:light_black)
            print(io, "n·µÄ‚Å∫·¥∏ = ")
            join(io, n·µÄ‚Å∫·¥∏ss[js], " + ")
            printstyled(io, " (ùê© = ", candidates.p[is][js], ")"; color=:light_black)
            println(io)
        end
    end
end
